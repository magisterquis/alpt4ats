--- ../argv_from_file_descriptor/argv_from_file_descriptor.go	Sat Sep  7 18:45:53 2024
+++ ./argv_from_argv0.go	Sat Sep  7 18:45:53 2024
@@ -1,10 +1,10 @@
-// Program argv_from_file_descriptor - argv_from_stdin but reads config from a
-// different file descriptor number.
+// Program argv_from_argv0 - argv_from_file_descriptor but parses argv[0] into
+// the config.
 package main
 
 /*
- * argv_from_file_descriptior.go
- * argv_from_stdin, but a different file descriptor number
+ * argv_from_argv0.go
+ * argv_from_file_descriptor, but uses argv0 instead
  * By J. Stuart McMurray
  * Created 20240902
  * Last Modified 20240906
@@ -19,7 +19,7 @@
 	"net"
 	"os"
 	"os/exec"
-	"syscall"
+	"strings"
 )
 
 // Compile-time configurables
@@ -30,22 +30,22 @@
 	FileEnvVar    = "ALPT4ATS_FILE"
 )
 
-// ConfFD is the file descriptor from which we might read our config.
-const ConfFD = 7
-
 func main() {
 	/* Config from environment overrides compile-time config. */
 	Address = cmp.Or(os.Getenv(AddressEnvVar), Address)
 	File = cmp.Or(os.Getenv(FileEnvVar), File)
 
-	/* Config from file descriptor 7 overrides config from environment. */
+	/* Config from argv[0] overrides config from environment. */
 	if _, err := fmt.Fscan(
-		os.NewFile(uintptr(ConfFD), "config"),
+		strings.NewReader(os.Args[0]),
 		&Address,
 		&File,
-	); nil != err && !errors.Is(err, io.EOF) &&
-		!errors.Is(err, syscall.EBADF) {
-		log.Fatalf("Error reading config from FD %d: %s", ConfFD, err)
+	); nil != err && !errors.Is(err, io.EOF) {
+		log.Fatalf(
+			"Error reading config from argv[0] (%q): %s",
+			os.Args[0],
+			err,
+		)
 	}
 
 	/* Connect to the server. */
