--- ../argv_from_stdin/argv_from_stdin.go	Sat Sep  7 18:45:53 2024
+++ argv_from_file_descriptor.go	Sat Sep  7 18:45:53 2024
@@ -1,12 +1,12 @@
-// Program argv_from_stdin - argv_from_environment which also tries to read
-// config from stdin.
+// Program argv_from_file_descriptor - argv_from_stdin but reads config from a
+// different file descriptor number.
 package main
 
 /*
- * argv_from_stdin.go
- * argv_from_environment, but also tries to read config from stdin
+ * argv_from_file_descriptior.go
+ * argv_from_stdin, but a different file descriptor number
  * By J. Stuart McMurray
- * Created 20240901
+ * Created 20240902
  * Last Modified 20240906
  */
 
@@ -19,6 +19,7 @@
 	"net"
 	"os"
 	"os/exec"
+	"syscall"
 )
 
 // Compile-time configurables
@@ -29,18 +30,22 @@
 	FileEnvVar    = "ALPT4ATS_FILE"
 )
 
+// ConfFD is the file descriptor from which we might read our config.
+const ConfFD = 7
+
 func main() {
 	/* Config from environment overrides compile-time config. */
 	Address = cmp.Or(os.Getenv(AddressEnvVar), Address)
 	File = cmp.Or(os.Getenv(FileEnvVar), File)
 
-	/* Config from stdin overrides config from environment. */
+	/* Config from file descriptor 7 overrides config from environment. */
 	if _, err := fmt.Fscan(
-		os.Stdin,
+		os.NewFile(uintptr(ConfFD), "config"),
 		&Address,
 		&File,
-	); nil != err && !errors.Is(err, io.EOF) {
-		log.Fatalf("Error reading config from stdin: %s", err)
+	); nil != err && !errors.Is(err, io.EOF) &&
+		!errors.Is(err, syscall.EBADF) {
+		log.Fatalf("Error reading config from FD %d: %s", ConfFD, err)
 	}
 
 	/* Connect to the server. */
